{"version":3,"sources":["api.js","components/user.js","container/app.js","serviceWorker.js","index.js"],"names":["count","callback","window","VK","Api","call","fields","v","Auth","login","logout","user","userFriends","className","first_name","last_name","length","map","id","key","props","userInfo","JSON","parse","localStorage","getItem","state","account","pending","success","data","isAuth","Object","keys","this","getFriends","setState","api","r","error","response","items","session","setItem","stringify","removeItem","viewBox","onClick","bind","d","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e4e2f55d.chunk.js","sourcesContent":["export default class {\n    static async getFriends(count, callback) {\n        return window.VK.Api.call('friends.get', {fields: 'username', count, v: '5.112'}, callback);\n    }\n    static async login(callback) {\n        return window.VK.Auth.login(callback);\n    }\n    static async logout() {\n        window.VK.Auth.logout();\n    }\n}","import React from 'react';\n\nimport './user.css';\n\nexport default ({user, userFriends}) => {\n    return (\n        <div className='user-card'>\n            <div className='user-card__name'>{user.first_name} {user.last_name}</div>\n            {(userFriends.length !== 0) && (\n                <div className=\"user-card__friends\">\n                    <div className=\"user-card__friends-title\">Your friends</div>\n                    {userFriends.map(({id, first_name, last_name}) =>\n                        <div key={id} className=\"user-card__friend\">{first_name} {last_name}</div>\n                    )}\n                </div>\n            )}\n        </div>\n    )\n}","import React, {Component} from 'react';\nimport Spinner from 'react-spinners/ClipLoader';\n\nimport api from '../api';\n\nimport UserPage from '../components/user.js';\n\nimport './app.css';\n\nexport default class extends Component {\n    constructor(props) {\n        super(props);\n        const userInfo = JSON.parse(localStorage.getItem('user')) || {};\n        this.state = {\n            account: {pending: false, success: true, userInfo},\n            userFriends: {pending: false, success: true, data: []},\n            isAuth: (Object.keys(userInfo).length !== 0)\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.isAuth)\n            this.getFriends();\n    }\n\n    getFriends() {\n        this.setState(state => ({userFriends: {...state.userFriends, pending: true}}));\n        api.getFriends(5, r => {\n            if (!r.error)\n                this.setState({\n                    userFriends: {pending: false, success: true, data: r.response.items}\n                });\n            else\n                this.setState({\n                    userFriends: {pending: false, success: false, data: []}\n                });\n        });\n    }\n\n    login() {\n        this.setState(state => ({account: {...state.account, pending: true}}));\n        api.login(r => {\n            if (r.session) {\n                this.setState({\n                    account: {pending: false, success: true, userInfo: r.session.user},\n                    isAuth: true\n                }, this.getFriends);\n                localStorage.setItem('user', JSON.stringify(r.session.user));\n            } else\n                this.setState({\n                    account: {success: false, pending: false, userInfo: {}}\n                });\n        })\n    }\n\n    logout() {\n        window.VK.Auth.logout();\n        localStorage.removeItem('user');\n        this.setState({\n            account: {pending: false, success: true, userInfo: {}},\n            userFriends: {pending: false, success: true, data: []},\n            isAuth: false\n        });\n    }\n\n    render() {\n        const {account, userFriends, isAuth} = this.state;\n\n        return (\n            <div className=\"app\">\n                {!isAuth\n                    ? (\n                        <>\n                            <svg className=\"logo\" viewBox=\"0 0 511.962 511.962\" onClick={this.login.bind(this)}>\n                                <path d=\"M250.503,400.807h30.592c0,0,9.248-1.024,13.952-6.112c4.352-4.672,4.192-13.44,4.192-13.44\n                                    s-0.608-41.056,18.464-47.104c18.784-5.952,42.912,39.68,68.48,57.248c19.328,13.28,34.016,10.368,34.016,10.368l68.384-0.96\n                                    c0,0,35.776-2.208,18.816-30.336c-1.376-2.304-9.888-20.8-50.848-58.816c-42.88-39.808-37.12-33.344,14.528-102.176\n                                    c31.456-41.92,44.032-67.52,40.096-78.464c-3.744-10.432-26.88-7.68-26.88-7.68l-76.928,0.448c0,0-5.696-0.768-9.952,1.76\n                                    c-4.128,2.496-6.784,8.256-6.784,8.256s-12.192,32.448-28.448,60.032c-34.272,58.208-48,61.28-53.6,57.664\n                                    c-13.024-8.416-9.76-33.856-9.76-51.904c0-56.416,8.544-79.936-16.672-86.016c-8.384-2.016-14.528-3.36-35.936-3.584\n                                    c-27.456-0.288-50.72,0.096-63.872,6.528c-8.768,4.288-15.52,13.856-11.392,14.4c5.088,0.672,16.608,3.104,22.72,11.424\n                                    c7.904,10.72,7.616,34.848,7.616,34.848s4.544,66.4-10.592,74.656c-10.4,5.664-24.64-5.888-55.2-58.72\n                                    c-15.648-27.04-27.488-56.96-27.488-56.96s-2.272-5.568-6.336-8.544c-4.928-3.616-11.84-4.768-11.84-4.768l-73.152,0.448\n                                    c0,0-10.976,0.32-15.008,5.088c-3.584,4.256-0.288,13.024-0.288,13.024s57.28,133.984,122.112,201.536\n                                    C182.983,404.871,250.503,400.807,250.503,400.807L250.503,400.807z\"/>\n                            </svg>\n                            {!account.pending && !account.success && <div className='error-text'>Error while auth</div>}\n                            {account.pending && <Spinner/>}\n                        </>\n                    )\n                    : (\n                        <>\n                            <svg className=\"logo\" viewBox=\"0 0 512 512\" onClick={this.logout.bind(this)}>\n                                <path d=\"M255.15,468.625H63.787c-11.737,0-21.262-9.526-21.262-21.262V64.638c0-11.737,9.526-21.262,21.262-21.262H255.15\n                                    c11.758,0,21.262-9.504,21.262-21.262S266.908,0.85,255.15,0.85H63.787C28.619,0.85,0,29.47,0,64.638v382.724\n                                    c0,35.168,28.619,63.787,63.787,63.787H255.15c11.758,0,21.262-9.504,21.262-21.262\n                                    C276.412,478.129,266.908,468.625,255.15,468.625z\"/>\n                                <path d=\"M505.664,240.861L376.388,113.286c-8.335-8.25-21.815-8.143-30.065,0.213s-8.165,21.815,0.213,30.065l92.385,91.173\n                                    H191.362c-11.758,0-21.262,9.504-21.262,21.262c0,11.758,9.504,21.263,21.262,21.263h247.559l-92.385,91.173\n                                    c-8.377,8.25-8.441,21.709-0.213,30.065c4.167,4.21,9.653,6.336,15.139,6.336c5.401,0,10.801-2.041,14.926-6.124l129.276-127.575\n                                    c4.04-3.997,6.336-9.441,6.336-15.139C512,250.302,509.725,244.88,505.664,240.861z\"/>\n                            </svg>\n                            <UserPage user={account.userInfo} userFriends={userFriends.data}/>\n                            {!userFriends.pending && !userFriends.success && <div className='error-text'>Error while getting friend list</div>}\n                            {userFriends.pending && <Spinner/>}\n                        </>\n                    )}\n            </div>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './container/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}